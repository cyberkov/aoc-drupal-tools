<?php
/**
* Display help and module information
* @param section which section of the site we're displaying help
* @return help text for section
*/
function dkp_help($section='') {
  $output = '';
  switch ($section) {
    case "admin/help#dkp":
      $output = '<p>'.  t("Displays and tracks guild DKP"). '</p>';
      break;
  }
  return $output;
}

/**
* Valid permissions for this module
*/
function dkp_perm() {
  return array('access dkp content');
} 

/**
* Building menu for this module
*/
function dkp_menu() {
  $items = array();
  $items['dkp'] = array(
    'title' => 'DKP',
    'page callback' => 'dkp_listmembers',
    'access arguments' => array('access dkp content'),
    'type' => MENU_CALLBACK);
  $items['dkp/members'] = array(
    'title' => 'Members',
    'page callback' => 'dkp_listmembers', 
    'access arguments' => array('access dkp content'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1);
  $items['dkp/raids'] = array(
    'title' => 'Raids',
    'page callback' => 'dkp_listraids', 
    'access arguments' => array('access dkp content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2);
  $items['dkp/items'] = array(
    'title' => 'Loots',
    'page callback' => 'dkp_listitems', 
    'access arguments' => array('access dkp content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 3);
  $items['dkp/events'] = array(
    'title' => 'Events',
    'page callback' => 'dkp_listevents', 
    'access arguments' => array('access dkp content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 4);
  return $items;
}


/*
function dkp_admin() {
  $form['dkp_maxdisp'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of raids'),
    '#default_value' => variable_get('eqdkpblock_maxdisp', 3),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t("The maximum number of links to display in the block."),
    '#required' => TRUE,
  );
  $form['dkp_dkphost'] = array(
    '#type' => 'textfield',
    '#title' => t('EQDKP Database Host'),
    '#default_value' => variable_get('eqdkpblock_dkphost', ''),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("URL or name of the host of the database."),
    '#required' => TRUE,
  );
  $form['dkp_dkpuser'] = array(
    '#type' => 'textfield',
    '#title' => t('EQDKP Database User'),
    '#default_value' => variable_get('eqdkpblock_dkpuser', ''),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("Name of the user of the database."),
    '#required' => TRUE,
  );
  $form['dkp_dkppass'] = array(
    '#type' => 'textfield',
    '#title' => t('EQDKP Database Password'),
    '#default_value' => variable_get('eqdkpblock_dkppass', ''),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("Password of the user of the database."),
    '#required' => TRUE,
  );
  $form['dkp_dkpdb'] = array(
    '#type' => 'textfield',
    '#title' => t('EQDKP Database Name'),
    '#default_value' => variable_get('eqdkpblock_dkpdb', ''),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("Name of the database."),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}


function dkp_admin_validate($form, &$form_state) {
  $maxdisp = $form_state['values']['eqdkpblock_maxdisp'];
  if (!is_numeric($maxdisp)) {
    form_set_error('eqdkpblock_maxdisp', t('You must select a number for the maximum number of raids.'));
  }
  else if ($maxdisp <= 0) {
    form_set_error('eqdkpblock_maxdisp', t('Maximum number of raids must be positive.'));
  }
}
*/


function dkp_listmembers($uid = 0) {
dkp_start();
if ($uid) {	
    return dkp_members_view($uid);
  } else {
    return dkp_members_list();
  }
}


function dkp_listitems($loot_id = 0) {
dkp_start();
if ($loot_id) {
    return dkp_items_view($loot_id);
  } else {
    return dkp_items_list();  }	
}

function dkp_listraids($raid_id = 0) {	
dkp_start();
if ($raid_id) {
    return dkp_raids_view($raid_id );
  } else {
    return dkp_raids_list();
  }	
}

function dkp_listevents($event_id = 0) {	
dkp_start();
if ($event_id) {
    return dkp_events_view( $event_id );
  } else {
    return dkp_events_list( );
  }
}


function dkp_start() {	
module_load_include('inc', 'dkp', 'dkp_content');
//include_once(drupal_get_path('module', 'dkp') . '/dkp_content.inc');

drupal_add_css( drupal_get_path('module', 'dkp') . '/dkp.css','module','all',false);
/*
    drupal_add_css( drupal_get_path('module', 'warcraft_armory') . '/templates/master.css','module','all',false);
    drupal_add_js(  variable_get('warcraft_armory_overlib_path', drupal_get_path('module', 'warcraft_armory') . '/overlib/overlib.js'));
*/

}

?>
